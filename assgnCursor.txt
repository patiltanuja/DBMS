Create database assgnCursor;
use assgnCursor;
Create table EMP ( 
            EMPNO numeric(4) not null, 
            ENAME varchar(30) not null, 
            JOB varchar(10), MGR numeric(4), 
            HIREDATE date, 
            SAL numeric(7,2), 
            DNO numeric(2) ); 
Insert into EMP (EMPNO ,ENAME, JOB, MGR, HIREDATE, SAL, DNO ) values(1000,  'Manish' , 'SALESMAN', 1003,  '2020-02-18', 600,  30) ;
Insert into EMP (EMPNO ,ENAME, JOB, MGR, HIREDATE, SAL, DNO ) values(1001,  'Manoj' , 'SALESMAN', 1003,  '2018-02-18', 600,  30) ;
Insert into EMP (EMPNO ,ENAME, JOB, MGR, HIREDATE, SAL, DNO ) values(1002 , 'Ashish', 'SALESMAN',1003 , '2013-02-18',  750,  30 );
Insert into EMP (EMPNO ,ENAME, JOB, MGR, HIREDATE, SAL, DNO ) values(1004,  'Rekha', 'ANALYST', 1006 , '2001-02-18', 3000,  10);
Insert into EMP (EMPNO ,ENAME, JOB, MGR, HIREDATE, SAL, DNO ) values(1005 , 'Sachin', 'ANALYST', 1006 ,  '2019-02-18', 3000, 10 );
Insert into EMP (EMPNO ,ENAME, JOB, MGR, HIREDATE, SAL, DNO ) values(1006,  'Pooja',  'MANAGER'  ,     null    , '2000-02-18' ,6000, 10 );

-- que1

delimiter $$

CREATE PROCEDURE CUR_ONE()
BEGIN
DECLARE ENAME VARCHAR(40);
DECLARE ESAL INT;
DECLARE FIN INT DEFAULT 0;
DECLARE CUR_FIRST CURSOR FOR SELECT EMPNO,SAL FROM EMP WHERE JOB='ANALYST';
DECLARE  CONTINUE HANDLER FOR NOT FOUND SET FIN=1;
OPEN CUR_FIRST;
JAMES : LOOP
	FETCH CUR_FIRST INTO ENAME,ESAL;
	IF FIN=1 THEN
	LEAVE JAMES;
	END IF;
          SELECT ENAME,ESAL;
END LOOP;

CLOSE CUR_FIRST;
END$$
call  CUR_ONE();

-- 2
DELIMITER $$


CREATE PROCEDURE CUR_TWO()

BEGIN
DECLARE ENO INT;
DECLARE ENAME VARCHAR(43);
DECLARE ESAL INT;

DECLARE FIN INT DEFAULT 0;
DECLARE CUR_SECOND CURSOR FOR SELECT EMPNO,ENAME,SAL FROM EMP ORDER BY SAL DESC LIMIT 5;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET FIN=1;
 OPEN CUR_SECOND;
    JAMES : LOOP
	     FETCH CUR_SECOND INTO ENO,ENAME,ESAL;
		IF FIN=1 THEN
		    LEAVE JAMES;
		END IF;
	      SELECT ENO,ENAME,ESAL;
     END LOOP;
  CLOSE CUR_SECOND;
END $$
DROP PROCEDURE CUR_TWO;
CALL CUR_TWO();



-- 3
DELIMITER $$


CREATE PROCEDURE CUR_THREE()

BEGIN
DECLARE FNAME VARCHAR(43);
DECLARE LNAME VARCHAR(43);
DECLARE FIN VARCHAR(40);
DECLARE CUR_THIRD CURSOR FOR SELECT ENAME,JOB FROM EMP;
DECLARE EXIT HANDLER FOR NOT FOUND SET FIN='ERROR';
 OPEN CUR_THIRD;
    JAMES : LOOP
	     FETCH CUR_THIRD INTO FNAME,LNAME;
		IF FIN='ERROR' THEN
		    LEAVE JAMES;
		END IF;
	      SELECT CONCAT(FNAME,'',LNAME);
     END LOOP;
  CLOSE CUR_THIRD;
END $$
CALL CUR_THREE();


-- 4
DELIMITER $$
CREATE PROCEDURE FOUR()
BEGIN
DECLARE CNO INT;
DECLARE CNAME VARCHAR(40);
DECLARE CJOB VARCHAR(40);
DECLARE CMGR NUMERIC(4) DEFAULT 0;
DECLARE CHIREDATE DATE;
DECLARE CSAL NUMERIC(7,2);
DECLARE CDNO NUMERIC(2) DEFAULT 0;
DECLARE FIN INT DEFAULT 0;

DECLARE CUR_FOURTH CURSOR FOR SELECT * FROM EMP WHERE ENAME='MANISH';

DECLARE CONTINUE HANDLER FOR NOT FOUND SET FIN =1;
OPEN CUR_FOURTH;
JAMES : LOOP
	FETCH  CUR_FOURTH INTO CNO,CNAME,CJOB,CMGR,CHIREDATE,CSAL,CDNO;
		IF FIN=1 THEN
			LEAVE JAMES;
		END IF;
                SELECT CONCAT(CNO,'',CNAME,'',CJOB,'',CMGR,'',CHIREDATE,'',CSAL,'',CDNO);
                END LOOP;
CLOSE CUR_FOURTH;
-- DROP PROCEDURE FOUR;
END$$
CALL FOUR();

-- 5
DELIMITER $$
CREATE PROCEDURE CUR_FIVE()
BEGIN
DECLARE CEMPNO Numeric(4) DEFAULT 0;
DECLARE FIN INT DEFAULT 0;

DECLARE CUR_FIFTH CURSOR FOR SELECT EMPNO FROM EMP WHERE SAL<10000;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET FIN=1;
	OPEN CUR_FIFTH;
		JAMES : LOOP
		FETCH CUR_FIFTH INTO CEMPNO;
                IF FIN=1 THEN
                LEAVE JAMES;
                END IF;
                DELETE FROM EMP WHERE EMPNO=CEMPNO;
        END LOOP;
        
        CLOSE CUR_FIFTH;
-- DROP PROCEDURE CUR_FIVE;
END$$

CALL CUR_FIVE();